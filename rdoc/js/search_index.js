var search_data = {"index":{"searchIndex":["birdbrain","error","birdbrainerrortest","birdbrainexception","birdbrainhummingbird","birdbraininput","birdbraininputtest","birdbrainmicrobitinput","birdbrainmicrobitinputtest","birdbrainmicrobitoutput","birdbrainmicrobitoutputtest","birdbrainoutput","birdbrainoutputtest","birdbrainrequest","birdbrainstate","birdbraintest","birdbraintestsetup","after_teardown()","assert_true_or_false()","assert_xyz_results()","bounds()","calculate_angle()","calculate_intensity()","calculate_speed()","connected?()","connected?()","connected_and_valid?()","dial()","dial()","distance()","distance()","error_exception()","hummingbird?()","hummingbird?()","led()","led()","light()","light()","microbit?()","microbit?()","microbit_accelerometer()","microbit_accelerometer()","microbit_button?()","microbit_button?()","microbit_clear_display()","microbit_clear_display()","microbit_compass()","microbit_compass()","microbit_display()","microbit_display()","microbit_display_map_as_strings()","microbit_display_map_clear()","microbit_empty_display_map()","microbit_magnetometer()","microbit_magnetometer()","microbit_orientation()","microbit_orientation()","microbit_orientation_check()","microbit_orientation_logo_down?()","microbit_orientation_logo_down?()","microbit_orientation_logo_up?()","microbit_orientation_logo_up?()","microbit_orientation_screen_down?()","microbit_orientation_screen_down?()","microbit_orientation_screen_up?()","microbit_orientation_screen_up?()","microbit_orientation_tilt_left?()","microbit_orientation_tilt_left?()","microbit_orientation_tilt_right?()","microbit_orientation_tilt_right?()","microbit_point()","microbit_point()","microbit_print()","microbit_print()","microbit_shaking?()","microbit_shaking?()","microbit_xyz_values()","new()","new()","not_connected?()","play_note()","play_note()","request_status()","response()","response_body()","rotation_servo()","rotation_servo()","sensor()","servo()","servo()","setup()","sound()","sound()","stop_all()","stop_all()","test_connection()","test_error_invalid_device()","test_error_invalid_port_number()","test_error_missing_device()","test_input_dial()","test_input_distance()","test_input_hummingbird?()","test_input_light()","test_input_microbit?()","test_input_microbit_accelerometer()","test_input_microbit_button?()","test_input_microbit_compass()","test_input_microbit_magnetometer()","test_input_microbit_orientation()","test_input_microbit_shaking?()","test_input_sound()","test_input_voltage()","test_output_led()","test_output_microbit_display()","test_output_microbit_display_state()","test_output_microbit_point()","test_output_microbit_print()","test_output_play_note()","test_output_rotation_servo()","test_output_servo()","test_output_tri_led()","test_version_number_available()","tri_led()","tri_led()","uri()","voltage()","voltage()","gemfile","gemfile.lock","license","readme","rakefile","setup","changelog"],"longSearchIndex":["birdbrain","birdbrain::error","birdbrainerrortest","birdbrainexception","birdbrainhummingbird","birdbraininput","birdbraininputtest","birdbrainmicrobitinput","birdbrainmicrobitinputtest","birdbrainmicrobitoutput","birdbrainmicrobitoutputtest","birdbrainoutput","birdbrainoutputtest","birdbrainrequest","birdbrainstate","birdbraintest","birdbraintestsetup","birdbraintestsetup#after_teardown()","birdbraintestsetup#assert_true_or_false()","birdbraintestsetup#assert_xyz_results()","birdbrainrequest::bounds()","birdbrainrequest::calculate_angle()","birdbrainrequest::calculate_intensity()","birdbrainrequest::calculate_speed()","birdbrainhummingbird#connected?()","birdbrainrequest::connected?()","birdbrainhummingbird#connected_and_valid?()","birdbrainhummingbird#dial()","birdbraininput::dial()","birdbrainhummingbird#distance()","birdbraininput::distance()","birdbrainerrortest#error_exception()","birdbrainhummingbird#hummingbird?()","birdbraininput::hummingbird?()","birdbrainhummingbird#led()","birdbrainoutput::led()","birdbrainhummingbird#light()","birdbraininput::light()","birdbrainhummingbird#microbit?()","birdbrainmicrobitinput::microbit?()","birdbrainhummingbird#microbit_accelerometer()","birdbrainmicrobitinput::microbit_accelerometer()","birdbrainhummingbird#microbit_button?()","birdbrainmicrobitinput::microbit_button?()","birdbrainhummingbird#microbit_clear_display()","birdbrainmicrobitoutput::microbit_clear_display()","birdbrainhummingbird#microbit_compass()","birdbrainmicrobitinput::microbit_compass()","birdbrainhummingbird#microbit_display()","birdbrainmicrobitoutput::microbit_display()","birdbrainstate#microbit_display_map_as_strings()","birdbrainstate#microbit_display_map_clear()","birdbrainstate::microbit_empty_display_map()","birdbrainhummingbird#microbit_magnetometer()","birdbrainmicrobitinput::microbit_magnetometer()","birdbrainhummingbird#microbit_orientation()","birdbrainmicrobitinput::microbit_orientation()","birdbrainmicrobitinput::microbit_orientation_check()","birdbrainhummingbird#microbit_orientation_logo_down?()","birdbrainmicrobitinput::microbit_orientation_logo_down?()","birdbrainhummingbird#microbit_orientation_logo_up?()","birdbrainmicrobitinput::microbit_orientation_logo_up?()","birdbrainhummingbird#microbit_orientation_screen_down?()","birdbrainmicrobitinput::microbit_orientation_screen_down?()","birdbrainhummingbird#microbit_orientation_screen_up?()","birdbrainmicrobitinput::microbit_orientation_screen_up?()","birdbrainhummingbird#microbit_orientation_tilt_left?()","birdbrainmicrobitinput::microbit_orientation_tilt_left?()","birdbrainhummingbird#microbit_orientation_tilt_right?()","birdbrainmicrobitinput::microbit_orientation_tilt_right?()","birdbrainhummingbird#microbit_point()","birdbrainmicrobitoutput::microbit_point()","birdbrainhummingbird#microbit_print()","birdbrainmicrobitoutput::microbit_print()","birdbrainhummingbird#microbit_shaking?()","birdbrainmicrobitinput::microbit_shaking?()","birdbrainmicrobitinput::microbit_xyz_values()","birdbrainhummingbird::new()","birdbrainstate::new()","birdbrainrequest::not_connected?()","birdbrainhummingbird#play_note()","birdbrainoutput::play_note()","birdbrainrequest::request_status()","birdbrainrequest::response()","birdbrainrequest::response_body()","birdbrainhummingbird#rotation_servo()","birdbrainoutput::rotation_servo()","birdbraininput::sensor()","birdbrainhummingbird#servo()","birdbrainoutput::servo()","birdbraintestsetup#setup()","birdbrainhummingbird#sound()","birdbraininput::sound()","birdbrainhummingbird#stop_all()","birdbrainoutput::stop_all()","birdbraintest#test_connection()","birdbrainerrortest#test_error_invalid_device()","birdbrainerrortest#test_error_invalid_port_number()","birdbrainerrortest#test_error_missing_device()","birdbraininputtest#test_input_dial()","birdbraininputtest#test_input_distance()","birdbraininputtest#test_input_hummingbird?()","birdbraininputtest#test_input_light()","birdbrainmicrobitinputtest#test_input_microbit?()","birdbrainmicrobitinputtest#test_input_microbit_accelerometer()","birdbrainmicrobitinputtest#test_input_microbit_button?()","birdbrainmicrobitinputtest#test_input_microbit_compass()","birdbrainmicrobitinputtest#test_input_microbit_magnetometer()","birdbrainmicrobitinputtest#test_input_microbit_orientation()","birdbrainmicrobitinputtest#test_input_microbit_shaking?()","birdbraininputtest#test_input_sound()","birdbraininputtest#test_input_voltage()","birdbrainoutputtest#test_output_led()","birdbrainmicrobitoutputtest#test_output_microbit_display()","birdbrainmicrobitoutputtest#test_output_microbit_display_state()","birdbrainmicrobitoutputtest#test_output_microbit_point()","birdbrainmicrobitoutputtest#test_output_microbit_print()","birdbrainoutputtest#test_output_play_note()","birdbrainoutputtest#test_output_rotation_servo()","birdbrainoutputtest#test_output_servo()","birdbrainoutputtest#test_output_tri_led()","birdbraintest#test_version_number_available()","birdbrainhummingbird#tri_led()","birdbrainoutput::tri_led()","birdbrainrequest::uri()","birdbrainhummingbird#voltage()","birdbraininput::voltage()","","","","","","",""],"info":[["Birdbrain","","Birdbrain.html","",""],["Birdbrain::Error","","Birdbrain/Error.html","",""],["BirdbrainErrorTest","","BirdbrainErrorTest.html","",""],["BirdbrainException","","BirdbrainException.html","",""],["BirdbrainHummingbird","","BirdbrainHummingbird.html","",""],["BirdbrainInput","","BirdbrainInput.html","",""],["BirdbrainInputTest","","BirdbrainInputTest.html","",""],["BirdbrainMicrobitInput","","BirdbrainMicrobitInput.html","",""],["BirdbrainMicrobitInputTest","","BirdbrainMicrobitInputTest.html","",""],["BirdbrainMicrobitOutput","","BirdbrainMicrobitOutput.html","",""],["BirdbrainMicrobitOutputTest","","BirdbrainMicrobitOutputTest.html","",""],["BirdbrainOutput","","BirdbrainOutput.html","",""],["BirdbrainOutputTest","","BirdbrainOutputTest.html","",""],["BirdbrainRequest","","BirdbrainRequest.html","",""],["BirdbrainState","","BirdbrainState.html","",""],["BirdbrainTest","","BirdbrainTest.html","",""],["BirdbrainTestSetup","","BirdbrainTestSetup.html","",""],["after_teardown","BirdbrainTestSetup","BirdbrainTestSetup.html#method-i-after_teardown","()",""],["assert_true_or_false","BirdbrainTestSetup","BirdbrainTestSetup.html#method-i-assert_true_or_false","(value)",""],["assert_xyz_results","BirdbrainTestSetup","BirdbrainTestSetup.html#method-i-assert_xyz_results","(xyz)",""],["bounds","BirdbrainRequest","BirdbrainRequest.html#method-c-bounds","(input, input_min, input_max, pass_through_input = nil)",""],["calculate_angle","BirdbrainRequest","BirdbrainRequest.html#method-c-calculate_angle","(intensity)",""],["calculate_intensity","BirdbrainRequest","BirdbrainRequest.html#method-c-calculate_intensity","(intensity)",""],["calculate_speed","BirdbrainRequest","BirdbrainRequest.html#method-c-calculate_speed","(speed)",""],["connected?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-connected-3F","()",""],["connected?","BirdbrainRequest","BirdbrainRequest.html#method-c-connected-3F","(device)",""],["connected_and_valid?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-connected_and_valid-3F","(validate, valid_range)",""],["dial","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-dial","(port)",""],["dial","BirdbrainInput","BirdbrainInput.html#method-c-dial","(device, port)",""],["distance","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-distance","(port)",""],["distance","BirdbrainInput","BirdbrainInput.html#method-c-distance","(device, port)",""],["error_exception","BirdbrainErrorTest","BirdbrainErrorTest.html#method-i-error_exception","()",""],["hummingbird?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-hummingbird-3F","()",""],["hummingbird?","BirdbrainInput","BirdbrainInput.html#method-c-hummingbird-3F","(device)",""],["led","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-led","(port, intensity)",""],["led","BirdbrainOutput","BirdbrainOutput.html#method-c-led","(device, port, intensity)",""],["light","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-light","(port)",""],["light","BirdbrainInput","BirdbrainInput.html#method-c-light","(device, port)",""],["microbit?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit-3F","()",""],["microbit?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit-3F","(device)",""],["microbit_accelerometer","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_accelerometer","()",""],["microbit_accelerometer","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_accelerometer","(device)",""],["microbit_button?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_button-3F","(button)",""],["microbit_button?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_button-3F","(device, button)",""],["microbit_clear_display","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_clear_display","()",""],["microbit_clear_display","BirdbrainMicrobitOutput","BirdbrainMicrobitOutput.html#method-c-microbit_clear_display","(state, device)",""],["microbit_compass","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_compass","()",""],["microbit_compass","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_compass","(device)",""],["microbit_display","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_display","(led_list)",""],["microbit_display","BirdbrainMicrobitOutput","BirdbrainMicrobitOutput.html#method-c-microbit_display","(state, device, led_list)",""],["microbit_display_map_as_strings","BirdbrainState","BirdbrainState.html#method-i-microbit_display_map_as_strings","()",""],["microbit_display_map_clear","BirdbrainState","BirdbrainState.html#method-i-microbit_display_map_clear","()",""],["microbit_empty_display_map","BirdbrainState","BirdbrainState.html#method-c-microbit_empty_display_map","()",""],["microbit_magnetometer","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_magnetometer","()",""],["microbit_magnetometer","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_magnetometer","(device)",""],["microbit_orientation","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation","()",""],["microbit_orientation","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation","(device)",""],["microbit_orientation_check","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_check","(device, index)",""],["microbit_orientation_logo_down?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation_logo_down-3F","()",""],["microbit_orientation_logo_down?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_logo_down-3F","(device)",""],["microbit_orientation_logo_up?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation_logo_up-3F","()",""],["microbit_orientation_logo_up?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_logo_up-3F","(device)",""],["microbit_orientation_screen_down?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation_screen_down-3F","()",""],["microbit_orientation_screen_down?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_screen_down-3F","(device)",""],["microbit_orientation_screen_up?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation_screen_up-3F","()",""],["microbit_orientation_screen_up?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_screen_up-3F","(device)",""],["microbit_orientation_tilt_left?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation_tilt_left-3F","()",""],["microbit_orientation_tilt_left?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_tilt_left-3F","(device)",""],["microbit_orientation_tilt_right?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_orientation_tilt_right-3F","()",""],["microbit_orientation_tilt_right?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_orientation_tilt_right-3F","(device)",""],["microbit_point","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_point","(x, y, value)",""],["microbit_point","BirdbrainMicrobitOutput","BirdbrainMicrobitOutput.html#method-c-microbit_point","(state, device, x, y, value)",""],["microbit_print","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_print","(message)",""],["microbit_print","BirdbrainMicrobitOutput","BirdbrainMicrobitOutput.html#method-c-microbit_print","(device, message)",""],["microbit_shaking?","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-microbit_shaking-3F","()",""],["microbit_shaking?","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_shaking-3F","(device)",""],["microbit_xyz_values","BirdbrainMicrobitInput","BirdbrainMicrobitInput.html#method-c-microbit_xyz_values","(device, sensor)",""],["new","BirdbrainHummingbird","BirdbrainHummingbird.html#method-c-new","(device = DEFAULT_DEVICE)",""],["new","BirdbrainState","BirdbrainState.html#method-c-new","()",""],["not_connected?","BirdbrainRequest","BirdbrainRequest.html#method-c-not_connected-3F","(device)",""],["play_note","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-play_note","(note, beats)",""],["play_note","BirdbrainOutput","BirdbrainOutput.html#method-c-play_note","(device, note, beats)",""],["request_status","BirdbrainRequest","BirdbrainRequest.html#method-c-request_status","(status)",""],["response","BirdbrainRequest","BirdbrainRequest.html#method-c-response","(*args)",""],["response_body","BirdbrainRequest","BirdbrainRequest.html#method-c-response_body","(*args)",""],["rotation_servo","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-rotation_servo","(port, speed)",""],["rotation_servo","BirdbrainOutput","BirdbrainOutput.html#method-c-rotation_servo","(device, port, speed)",""],["sensor","BirdbrainInput","BirdbrainInput.html#method-c-sensor","(device, port, factor)",""],["servo","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-servo","(port, angle)",""],["servo","BirdbrainOutput","BirdbrainOutput.html#method-c-servo","(device, port, angle)",""],["setup","BirdbrainTestSetup","BirdbrainTestSetup.html#method-i-setup","()",""],["sound","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-sound","(port)",""],["sound","BirdbrainInput","BirdbrainInput.html#method-c-sound","(device, port)",""],["stop_all","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-stop_all","()",""],["stop_all","BirdbrainOutput","BirdbrainOutput.html#method-c-stop_all","(device)",""],["test_connection","BirdbrainTest","BirdbrainTest.html#method-i-test_connection","()",""],["test_error_invalid_device","BirdbrainErrorTest","BirdbrainErrorTest.html#method-i-test_error_invalid_device","()",""],["test_error_invalid_port_number","BirdbrainErrorTest","BirdbrainErrorTest.html#method-i-test_error_invalid_port_number","()",""],["test_error_missing_device","BirdbrainErrorTest","BirdbrainErrorTest.html#method-i-test_error_missing_device","()",""],["test_input_dial","BirdbrainInputTest","BirdbrainInputTest.html#method-i-test_input_dial","()",""],["test_input_distance","BirdbrainInputTest","BirdbrainInputTest.html#method-i-test_input_distance","()",""],["test_input_hummingbird?","BirdbrainInputTest","BirdbrainInputTest.html#method-i-test_input_hummingbird-3F","()",""],["test_input_light","BirdbrainInputTest","BirdbrainInputTest.html#method-i-test_input_light","()",""],["test_input_microbit?","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit-3F","()",""],["test_input_microbit_accelerometer","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit_accelerometer","()",""],["test_input_microbit_button?","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit_button-3F","()",""],["test_input_microbit_compass","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit_compass","()",""],["test_input_microbit_magnetometer","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit_magnetometer","()",""],["test_input_microbit_orientation","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit_orientation","()",""],["test_input_microbit_shaking?","BirdbrainMicrobitInputTest","BirdbrainMicrobitInputTest.html#method-i-test_input_microbit_shaking-3F","()",""],["test_input_sound","BirdbrainInputTest","BirdbrainInputTest.html#method-i-test_input_sound","()",""],["test_input_voltage","BirdbrainInputTest","BirdbrainInputTest.html#method-i-test_input_voltage","()",""],["test_output_led","BirdbrainOutputTest","BirdbrainOutputTest.html#method-i-test_output_led","()",""],["test_output_microbit_display","BirdbrainMicrobitOutputTest","BirdbrainMicrobitOutputTest.html#method-i-test_output_microbit_display","()",""],["test_output_microbit_display_state","BirdbrainMicrobitOutputTest","BirdbrainMicrobitOutputTest.html#method-i-test_output_microbit_display_state","()",""],["test_output_microbit_point","BirdbrainMicrobitOutputTest","BirdbrainMicrobitOutputTest.html#method-i-test_output_microbit_point","()",""],["test_output_microbit_print","BirdbrainMicrobitOutputTest","BirdbrainMicrobitOutputTest.html#method-i-test_output_microbit_print","()",""],["test_output_play_note","BirdbrainOutputTest","BirdbrainOutputTest.html#method-i-test_output_play_note","()",""],["test_output_rotation_servo","BirdbrainOutputTest","BirdbrainOutputTest.html#method-i-test_output_rotation_servo","()",""],["test_output_servo","BirdbrainOutputTest","BirdbrainOutputTest.html#method-i-test_output_servo","()",""],["test_output_tri_led","BirdbrainOutputTest","BirdbrainOutputTest.html#method-i-test_output_tri_led","()",""],["test_version_number_available","BirdbrainTest","BirdbrainTest.html#method-i-test_version_number_available","()",""],["tri_led","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-tri_led","(port, r_intensity, g_intensity, b_intensity)",""],["tri_led","BirdbrainOutput","BirdbrainOutput.html#method-c-tri_led","(device, port, r_intensity, g_intensity, b_intensity)",""],["uri","BirdbrainRequest","BirdbrainRequest.html#method-c-uri","(*args)",""],["voltage","BirdbrainHummingbird","BirdbrainHummingbird.html#method-i-voltage","(port)",""],["voltage","BirdbrainInput","BirdbrainInput.html#method-c-voltage","(device, port)",""],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p># Specify your gem&#39;s dependencies in birdbrain.gemspec gemspec\n<p>gem &#39;rake&#39;, …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  birdbrain (0.1.1)</pre>\n<p>GEM\n"],["LICENSE","","LICENSE_txt.html","","<p>The MIT License (MIT)\n<p>Copyright © 2021 Base2 Incorporated (Frank Morton)\n<p>Permission is hereby granted, …\n"],["README","","README_md.html","","<p>Birdbrain-Ruby-Library\n<p>Ruby Library for Hummingbird Bit (and maybe Finch 2 later)\n<p>This Ruby library allows …\n"],["Rakefile","","Rakefile.html","","<p>require &#39;bundler/gem_tasks&#39; require &#39;rake/testtask&#39;\n<p>Rake::TestTask.new(:test) do |t|\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">libs</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["CHANGELOG","","doc_hide/CHANGELOG_md.html","",""]]}}